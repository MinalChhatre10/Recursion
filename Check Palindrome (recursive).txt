//Check Palindrome (recursive)
//Check whether a given String S is a palindrome using recursion. Return true or false.
// Check Palindrome (recursive)
// Check whether a given String S is a palindrome using recursion. Return true or false.
#include <iostream>
#include<string.h>
#include <cstring>
using namespace std;
int i=0;
bool checkPalindrome(char input[]){
    int n=strlen(input);
    if(i>=n/2){
        return true;
    }
    if(input[i]!=input[n-i-1]){
        return false;
    }
    i++;
   checkPalindrome(input); 
}
int main() {
    char input[100];
    cin.get(input, 100);
    cout<<checkPalindrome(input);
    return 0;
}

// #include <iostream>

// using namespace std;

// void display(char *);
// void display(string);

// int main()
// {
//     string str1;
//     char str[100];

//     cout << "Enter a string: ";
//     getline(cin, str1);

//     cout << "Enter another string: ";
//     cin.get(str, 100, '\n');

//     display(str1);
//     display(str);
//     return 0;
// }

// void display(char s[])
// {
//     cout << "Entered char array is: " << s << endl;
// }

// void display(string s)
// {
//     cout << "Entered string is: " << s << endl;
// }